{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","syle","width","renderMessages","height","LoginForm","typeOfSubmit","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","e","required","align","onclick","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReacDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e80535a.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport { sendMessage, isTyping } from 'react-chat-engine';\r\nimport { SendOutlined, PictureOutlined } from '@ant-design/icons';\r\n\r\nconst MessageForm = (props) => {\r\n\r\n    const [value, setValue] = useState('');\r\n    const { chatId, creds } = props;\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const text = value.trim();\r\n\r\n        if(text.length > 0) sendMessage(creds, chatId, { text });\r\n\r\n        setValue('');\r\n    }\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n\r\n        isTyping(props, chatId);\r\n    }\r\n\r\n    const handleUpload = (event) => {\r\n        sendMessage(creds, chatId, { files: event.target.files, text: '' });\r\n    }\r\n\r\n    return (\r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n                className=\"message-input\"\r\n                placeholder=\"Send a message...\"\r\n                value={value}\r\n                onChange={handleChange}\r\n                onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input \r\n                type=\"file\"\r\n                multiple={false}\r\n                id=\"upload-button\"\r\n                style={{ display: 'none'}}\r\n                onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default MessageForm;","const MyMessage = ({ message }) => {\r\n    if(message?.attachments?.length > 0) {\r\n        return (\r\n            <img\r\n                src={message.attachments[0].file}\r\n                alt=\"message-attachment\"\r\n                className=\"message-image\"\r\n                style={{ float: 'right' }}\r\n            />\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"message\" style={{ float: 'right', marginRight: '18px', color: 'white', backgroundColor: 'rgb(244,108,0)' }}>\r\n            {message.text}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyMessage;","const TheirMessage = ({ lastMessage, message }) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser && (\r\n                <div\r\n                    className=\"message-avatar\"\r\n                    style={{ backgroundImage: message.sender && `url(${message.sender.avatar})`}}\r\n                />\r\n            )}\r\n            {\r\n                message?.attachments?.length > 0\r\n                ? (\r\n                        <img\r\n                            src={message.attachments[0].file}\r\n                            alt=\"message-attachment\"\r\n                            className=\"message-image\"\r\n                            style={{ marginLeft: isFirstMessageByUser ? '4px' : '48px' }}\r\n                        />\r\n                ) : (\r\n                        <div className=\"message\" style={{ float: 'left', backgroundColor: 'rgb(85,92,102)',  marginLeft: isFirstMessageByUser ? '4px' : '48px'  }}>\r\n                            {message.text}\r\n                        </div>\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TheirMessage;","import MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\nconst ChatFeed = (props) => {\r\n    const { chats, activeChat, userName, messages } = props;\r\n\r\n    const chat = chats && chats[activeChat];\r\n\r\n    const renderReadReceipts = (message, isMyMessage) => {\r\n        return chat.people.map((person, index) => person.last_read === message.id && (\r\n            <div \r\n                key={`read_${index}`}\r\n                className=\"read-receipt\"\r\n                style={{\r\n                    float: isMyMessage ? 'right' : 'left',\r\n                    backgroundImage: `url(${person?.person?.avatar})`\r\n                }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n\r\n        return keys.map((key, index) => {\r\n            const message = messages[key];\r\n            const lastMessageKey = index === 0 ? null : keys[index - 1];\r\n            const isMyMessage = userName === message.sender.username;\r\n\r\n            return (\r\n                <div key={`msg_${index}`} syle={{ width: '100%' }}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage \r\n                            ? <MyMessage message={message} /> \r\n                            : <TheirMessage message={message} lastMessage={messages[lastMessageKey]} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-receipts\" syle={{ marginRight: isMyMessage ? '18px' : '0px', marginLeft: isMyMessage ? '0px' : '68px' }}>\r\n                        {renderReadReceipts(message, isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n\r\n    if(!chat) return 'Loading...';\r\n\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    {chat.title}\r\n                </div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person) => `${person.person.username}`)}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{ height: '100px' }} />\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {... props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed;","import { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst LoginForm = () => {\r\n    var typeOfSubmit;\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        if (typeOfSubmit === 'login') {\r\n            const authObject = { 'Project-ID': \"c2014f55-251e-4f78-9e6a-e936a882655b\", \"User-Name\": username, 'User-Secret': password };\r\n\r\n            try {\r\n                await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n                localStorage.setItem('username', username)\r\n                localStorage.setItem('password', password)\r\n\r\n                window.location.reload();\r\n\r\n            } catch (error) {\r\n                setError('Incorrect login credentials.')\r\n            }\r\n        }        \r\n        \r\n        else if (typeOfSubmit === 'create') {\r\n            const authObject = { 'Project-ID': \"c2014f55-251e-4f78-9e6a-e936a882655b\", \"User-Name\": username, 'User-Secret': password };\r\n\r\n            try {\r\n                await axios.get('https://api.chatengine.io/chats', { headers: authObject });\r\n\r\n                localStorage.setItem('username', username)\r\n                localStorage.setItem('password', password)\r\n\r\n                window.location.reload();\r\n\r\n            } catch (error) {\r\n                setError('Incorrect login credentials.')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"form\">\r\n                <h1 className=\"title\">Chat Application</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"Username\" required />\r\n                    <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required />\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\" onclick={typeOfSubmit='login'}>\r\n                            <span>Start Chatting</span>\r\n                        </button>\r\n                        {/* <button type=\"submit\" className=\"button\" onclick={typeOfSubmit='create'}>\r\n                            <span>Create Account</span>\r\n                        </button> */}\r\n                        <h2 className=\"error\">{error}</h2>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { ChatEngine } from 'react-chat-engine';\r\nimport './App.css';\r\n\r\nimport ChatFeed from './components/ChatFeed';\r\nimport LoginForm from './components/LoginForm';\r\nimport CreateAccountForm from './components/CreateAccountForm';\r\n\r\nconst App = () => {\r\n\r\n    if(!localStorage.getItem('username')) return <LoginForm />\r\n\r\n    return (\r\n        <ChatEngine \r\n            height=\"100vh\"\r\n            projectID=\"c2014f55-251e-4f78-9e6a-e936a882655b\"\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n            renderChatFeed={(chatAppProps) => <ChatFeed {... chatAppProps} />}\r\n        />\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReacDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReacDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}